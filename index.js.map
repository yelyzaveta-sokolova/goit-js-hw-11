{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["// У файлі pixabay-api.js зберігай функції для HTTP-запитів.\n\n\n\nexport function getPictures(name) {\n  const BASE_URL = 'https://pixabay.com/api/';\n  const KEY = '32552782-0d4c86680018457e820f20492';\n\n  if (name.includes(' ')) {\n    name = name.replace(/\\s+/g, '+');\n  }\n\n  const searchParams = new URLSearchParams({\n    key: KEY,\n    q: name,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n  });\n\n  return fetch(`${BASE_URL}?${searchParams}`)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(res.statusText);\n      }\n      return res.json();\n    });\n}\n","// У файлі render-functions.js створи функції для відображення елементів інтерфейсу.\n\n\n\nexport function createMarkup(arr) {\n  return arr.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) =>\n    `<li class=\"gallery-item\">\n          <a class=\"gallery-link\" href=\"${largeImageURL}\">\n            <img\n              class=\"gallery-image\"\n              src=\"${webformatURL}\"\n              alt=\"${tags}\"\n              width=\"360\"\n            />\n          </a>\n          <div class=\"thumb-block\">\n            <div class=\"block\">\n              <h2 class=\"tittle\">Likes</h2>\n              <p class=\"amount\">${likes}</p>\n            </div>\n            <div class=\"block\">\n              <h2 class=\"tittle\">Views</h2>\n              <p class=\"amount\">${views}</p>\n            </div>\n            <div class=\"block\">\n              <h2 class=\"tittle\">Comments</h2>\n              <p class=\"amount\">${comments}</p>\n            </div>\n            <div class=\"block\">\n              <h2 class=\"tittle\">Downloads</h2>\n              <p class=\"amount\">${downloads}</p>\n            </div>\n          </div>\n        </li>`).join('');\n}\n","// У файлі main.js напиши всю логіку роботи додатка.\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nimport { getPictures } from './js/pixabay-api.js';\nimport { createMarkup } from './js/render-functions.js';\n\nconst formSearch = document.querySelector('.js-search');\nconst listImages = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\n\nloader.style.display = 'none';\n\nformSearch.addEventListener('submit', onSearch);\n\nfunction onSearch(event) {\n  event.preventDefault();\n  listImages.innerHTML = '';\n  loader.style.display = 'block';\n\n  const inputValue = event.target.elements.search.value;\n\n  if (!validateInput(inputValue)) {\n    loader.style.display = 'none';\n    return;\n  }\n\n  getPictures(inputValue)\n    .then(data => {\n      loader.style.display = 'none';\n\n      if (!data.hits.length) {\n        iziToast.error({\n          title: 'Error',\n          message: 'Sorry, there are no images matching your search query. Please try again!',\n        });\n      } else {\n        listImages.innerHTML = createMarkup(data.hits);\n\n        const refreshPage = new SimpleLightbox('.gallery a', {\n          captions: true,\n          captionsData: 'alt',\n          captionDelay: 250,\n        });\n        refreshPage.refresh();\n      }\n\n      formSearch.reset();\n    })\n    .catch(err => {\n      loader.style.display = 'none';\n      console.log(err);\n    });\n}\n\nfunction validateInput(valueInput) {\n  const trimmedValue = valueInput.trim();\n\n  if (trimmedValue === '') {\n    alert(\"Кажется, вы забыли указать, какое фото вы хотите найти :)\");\n    return false;\n  } else {\n    console.log(\"Input корректный\");\n    return true;\n  }\n}\n"],"names":["getPictures","name","BASE_URL","KEY","searchParams","res","createMarkup","arr","webformatURL","largeImageURL","tags","likes","views","comments","downloads","formSearch","listImages","loader","onSearch","event","inputValue","validateInput","data","SimpleLightbox","iziToast","err","valueInput"],"mappings":"6vBAIO,SAASA,EAAYC,EAAM,CAChC,MAAMC,EAAW,2BACXC,EAAM,qCAERF,EAAK,SAAS,GAAG,IACnBA,EAAOA,EAAK,QAAQ,OAAQ,GAAG,GAGjC,MAAMG,EAAe,IAAI,gBAAgB,CACvC,IAAKD,EACL,EAAGF,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,CAAG,EAED,OAAO,MAAM,GAAGC,CAAQ,IAAIE,CAAY,EAAE,EACvC,KAAKC,GAAO,CACX,GAAI,CAACA,EAAI,GACP,MAAM,IAAI,MAAMA,EAAI,UAAU,EAEhC,OAAOA,EAAI,MACjB,CAAK,CACL,CCvBO,SAASC,EAAaC,EAAK,CAChC,OAAOA,EAAI,IAAI,CAAC,CAAE,aAAAC,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAW,IACtF;AAAA,0CACsCL,CAAa;AAAA;AAAA;AAAA,qBAGlCD,CAAY;AAAA,qBACZE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAOSC,CAAK;AAAA;AAAA;AAAA;AAAA,kCAILC,CAAK;AAAA;AAAA;AAAA;AAAA,kCAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,kCAIRC,CAAS;AAAA;AAAA;AAAA,cAG7B,EAAE,KAAK,EAAE,CACvB,CCxBA,MAAMC,EAAa,SAAS,cAAc,YAAY,EAChDC,EAAa,SAAS,cAAc,UAAU,EAC9CC,EAAS,SAAS,cAAc,SAAS,EAE/CA,EAAO,MAAM,QAAU,OAEvBF,EAAW,iBAAiB,SAAUG,CAAQ,EAE9C,SAASA,EAASC,EAAO,CACvBA,EAAM,eAAc,EACpBH,EAAW,UAAY,GACvBC,EAAO,MAAM,QAAU,QAEvB,MAAMG,EAAaD,EAAM,OAAO,SAAS,OAAO,MAEhD,GAAI,CAACE,EAAcD,CAAU,EAAG,CAC9BH,EAAO,MAAM,QAAU,OACvB,MACD,CAEDjB,EAAYoB,CAAU,EACnB,KAAKE,GAAQ,CACZL,EAAO,MAAM,QAAU,OAElBK,EAAK,KAAK,QAMbN,EAAW,UAAYV,EAAagB,EAAK,IAAI,EAEzB,IAAIC,EAAe,aAAc,CACnD,SAAU,GACV,aAAc,MACd,aAAc,GACxB,CAAS,EACW,QAAO,GAZnBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,0EACnB,CAAS,EAYHT,EAAW,MAAK,CACtB,CAAK,EACA,MAAMU,GAAO,CACZR,EAAO,MAAM,QAAU,OACvB,QAAQ,IAAIQ,CAAG,CACrB,CAAK,CACL,CAEA,SAASJ,EAAcK,EAAY,CAGjC,OAFqBA,EAAW,SAEX,IACnB,MAAM,2DAA2D,EAC1D,KAEP,QAAQ,IAAI,kBAAkB,EACvB,GAEX"}